{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/components/scene.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { MTLLoader, OBJLoader } from 'three-obj-mtl-loader'; // var loader = new THREE.ObjectLoader();\n// loader.load(\n// \t// resource URL\n// \t\"models/json/example.json\",\n// \t// onLoad callback\n// \t// Here the loaded data is assumed to be an object\n// \tfunction ( obj ) {\n// \t\t// Add the loaded object to the scene\n// \t\tscene.add( obj );\n// \t},\n// \t// onProgress callback\n// \tfunction ( xhr ) {\n// \t\tconsole.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n// \t},\n// \t// onError callback\n// \tfunction ( err ) {\n// \t\tconsole.error( 'An error happened' );\n// \t}\n// );\n\nvar Scene =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scene, _Component);\n\n  function Scene(props) {\n    var _this;\n\n    _classCallCheck(this, Scene);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scene).call(this, props));\n    _this.threecanvas = React.createRef();\n    return _this;\n  }\n\n  _createClass(Scene, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.THREE = THREE; // THREE.NRRDLoader expects THREE to be a global object\n\n      require('three/examples/js/loaders/NRRDLoader');\n\n      var scene = new THREE.Scene(); // var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n      // var renderer = new THREE.WebGLRenderer();\n      // renderer.setSize( window.innerWidth, window.innerHeight );\n      // this.threecanvas.current.appendChild( renderer.domElement );\n      // var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n      // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n      // var cube = new THREE.Mesh( geometry, material );\n      // var loader = new THREE.ObjectLoader();\n      // let mtlLoader = new MTLLoader();\n      // let objLoader = new OBJLoader();\n      // mtlLoader.load('/hand.mtl', (materials) => {\n      //     materials.preload()\n      //     objLoader.setMaterials(materials)\n      //     objLoader.load('/hand.obj', (object) => {\n      //         scene.add(object)\n      //     })\n      // })\n      // scene.add( cube );\n      // camera.position.z = 5;\n      // var animate = function () {\n      //   requestAnimationFrame( animate );\n      //   cube.rotation.x += 0.01;\n      //   cube.rotation.y += 0.01;\n      //   renderer.render( scene, camera );\n      // };\n      // animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"three-container\",\n        ref: this.threecanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Scene;\n}(Component);\n\nexport default Scene;","map":{"version":3,"sources":["/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/components/scene.js"],"names":["React","Component","THREE","MTLLoader","OBJLoader","Scene","props","threecanvas","createRef","window","require","scene"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,sBAAnC,C,CAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmBP,KAAK,CAACQ,SAAN,EAAnB;AAFc;AAGjB;;;;wCACkB;AACfC,MAAAA,MAAM,CAACP,KAAP,GAAeA,KAAf,CADe,CACO;;AAC9BQ,MAAAA,OAAO,CAAC,sCAAD,CAAP;;AACQ,UAAIC,KAAK,GAAG,IAAIT,KAAK,CAACG,KAAV,EAAZ,CAHe,CAIf;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;6BACO;AACJ,aACI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAA0B,QAAA,GAAG,EAAE,KAAKE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA9CeN,S;;AAiDpB,eAAeI,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport {MTLLoader, OBJLoader} from 'three-obj-mtl-loader';\n\n\n// var loader = new THREE.ObjectLoader();\n\n// loader.load(\n// \t// resource URL\n// \t\"models/json/example.json\",\n\n// \t// onLoad callback\n// \t// Here the loaded data is assumed to be an object\n// \tfunction ( obj ) {\n// \t\t// Add the loaded object to the scene\n// \t\tscene.add( obj );\n// \t},\n\n// \t// onProgress callback\n// \tfunction ( xhr ) {\n// \t\tconsole.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n// \t},\n\n// \t// onError callback\n// \tfunction ( err ) {\n// \t\tconsole.error( 'An error happened' );\n// \t}\n// );\n\nclass Scene extends Component {\n    constructor(props){\n        super(props);\n        this.threecanvas = React.createRef();\n    }\n    componentDidMount(){\n        window.THREE = THREE; // THREE.NRRDLoader expects THREE to be a global object\nrequire('three/examples/js/loaders/NRRDLoader');\n        var scene = new THREE.Scene();\n        // var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        // var renderer = new THREE.WebGLRenderer();\n        // renderer.setSize( window.innerWidth, window.innerHeight );\n        // this.threecanvas.current.appendChild( renderer.domElement );\n        // var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        // var cube = new THREE.Mesh( geometry, material );\n\n\n        // var loader = new THREE.ObjectLoader();\n        // let mtlLoader = new MTLLoader();\n \n        // let objLoader = new OBJLoader();\n        \n        // mtlLoader.load('/hand.mtl', (materials) => {\n        //     materials.preload()\n        //     objLoader.setMaterials(materials)\n        //     objLoader.load('/hand.obj', (object) => {\n        //         scene.add(object)\n        //     })\n        // })\n        \n\n        // scene.add( cube );\n        // camera.position.z = 5;\n        // var animate = function () {\n        //   requestAnimationFrame( animate );\n        //   cube.rotation.x += 0.01;\n        //   cube.rotation.y += 0.01;\n        //   renderer.render( scene, camera );\n        // };\n        // animate();\n    }\n    render(){\n        return (\n            <div id=\"three-container\" ref={this.threecanvas} />\n        )\n    }\n}\n\nexport default Scene;"]},"metadata":{},"sourceType":"module"}