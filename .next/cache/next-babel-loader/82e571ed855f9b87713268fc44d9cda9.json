{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport App from 'next/app';\nimport Footer from '../components/footer';\nimport Navbar from '../components/navbar';\nimport HeadInfos from '../components/headinfos';\nimport Fetch from 'isomorphic-unfetch';\n\nvar initState = require('../data/state.json');\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", initState);\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(HeadInfos, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"test\")), __jsx(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), __jsx(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/pages/_app.js"],"names":["React","Fragment","Head","App","Footer","Navbar","HeadInfos","Fetch","initState","require","MyApp","props","Component","pageProps","state","router","ctx","getInitialProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;IAEqBC,K;;;;;;;;;;;;;;;;;;4DAWXF,S;;;;;;;6BAEE;AAAA,wBACyB,KAAKG,KAD9B;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAGR,aACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,MAAC,SAAD,eAAeA,SAAf,EAA8B,KAAKC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,EAOE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD;;;;;;;;;AA1B8BF,cAAAA,S,QAAAA,S,EAAWG,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC5CH,cAAAA,S,GAAY,E;;mBAEZD,SAAS,CAACK,e;;;;;;+CACML,SAAS,CAACK,eAAV,CAA0BD,GAA1B,C;;;AAAlBH,cAAAA,S;;;+CAGK;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EARwBV,G;;SAAdO,K","sourcesContent":["import React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport App from 'next/app';\nimport Footer from '../components/footer';\nimport Navbar from '../components/navbar';\nimport HeadInfos from '../components/headinfos';\nimport Fetch from 'isomorphic-unfetch';\n\nconst initState = require('../data/state.json');\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  state = initState;\n\n  render () {\n    const { Component, pageProps } = this.props\n\n    return (\n      <Fragment>\n        <Head>\n          <HeadInfos/>\n          <title>test</title>\n        </Head>\n        <Navbar/>\n        <Component {...pageProps} {...this.state}/>\n        <Footer/>\n      </Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}