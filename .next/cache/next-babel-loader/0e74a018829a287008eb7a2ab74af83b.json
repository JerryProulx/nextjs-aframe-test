{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/components/scene.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\n\nvar Scene =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scene, _Component);\n\n  function Scene() {\n    _classCallCheck(this, Scene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Scene).apply(this, arguments));\n  }\n\n  _createClass(Scene, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scene = new THREE.Scene();\n      var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      var renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight); // document.body.appendChild( renderer.domElement );\n      // use ref as a mount point of the Three.js scene instead of the document.body\n\n      this.threecanvas.current.appendChild(renderer.domElement);\n      var geometry = new THREE.BoxGeometry(1, 1, 1);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      var cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      camera.position.z = 5;\n\n      var animate = function animate() {\n        requestAnimationFrame(animate);\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        ref: this.threecanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Scene;\n}(Component);","map":{"version":3,"sources":["/Users/jeremiproulx/Desktop/DEV/NEXTJS/test1/components/scene.js"],"names":["React","Component","THREE","Scene","scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","threecanvas","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,K;;;;;;;;;;;;;wCACiB;AACf,UAAIC,KAAK,GAAG,IAAIF,KAAK,CAACC,KAAV,EAAZ;AACA,UAAIE,MAAM,GAAG,IAAIH,KAAK,CAACI,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,UAAIC,QAAQ,GAAG,IAAIR,KAAK,CAACS,aAAV,EAAf;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C,EAJe,CAKf;AACA;;AACA,WAAKI,WAAL,CAAiBC,OAAjB,CAAyBC,WAAzB,CAAsCL,QAAQ,CAACM,UAA/C;AACA,UAAIC,QAAQ,GAAG,IAAIf,KAAK,CAACgB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,UAAIC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,iBAAV,CAA6B;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7B,CAAf;AACA,UAAIC,IAAI,GAAG,IAAIpB,KAAK,CAACqB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX;AACAf,MAAAA,KAAK,CAACoB,GAAN,CAAWF,IAAX;AACAjB,MAAAA,MAAM,CAACoB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,UAAIC,OAAO,GAAG,SAAVA,OAAU,GAAY;AACxBC,QAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAL,QAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAR,QAAAA,IAAI,CAACO,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACArB,QAAAA,QAAQ,CAACsB,MAAT,CAAiB5B,KAAjB,EAAwBC,MAAxB;AACD,OALD;;AAMAsB,MAAAA,OAAO;AACV;;;6BACO;AACJ,aACI;AAAK,QAAA,GAAG,EAAE,KAAKd,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA1BeZ,S","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three'\n\nclass Scene extends Component {\n    componentDidMount(){\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        // document.body.appendChild( renderer.domElement );\n        // use ref as a mount point of the Three.js scene instead of the document.body\n        this.threecanvas.current.appendChild( renderer.domElement );\n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        var cube = new THREE.Mesh( geometry, material );\n        scene.add( cube );\n        camera.position.z = 5;\n        var animate = function () {\n          requestAnimationFrame( animate );\n          cube.rotation.x += 0.01;\n          cube.rotation.y += 0.01;\n          renderer.render( scene, camera );\n        };\n        animate();\n    }\n    render(){\n        return (\n            <div ref={this.threecanvas} />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}